// <auto-generated />
using System;
using ATD_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATD_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240102075940_2")]
    partial class _2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateAchat")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("fournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("montantTotal")
                        .HasColumnType("float");

                    b.Property<string>("numeroAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("tauxAchat")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("fournisseurId");

                    b.HasIndex("locationId");

                    b.ToTable("achats");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("emballageDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("emballageGrosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("familleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantiteDetail")
                        .HasColumnType("int");

                    b.Property<int>("stockMinimal")
                        .HasColumnType("int");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("familleId");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("ATD_API.Entities.ArticleLocation", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("emballageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("qteStock")
                        .HasColumnType("float");

                    b.Property<double>("seuil")
                        .HasColumnType("float");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("emballageId");

                    b.HasIndex("locationId");

                    b.ToTable("articleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateCommande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("fournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("numeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<double>("tauxDeChange")
                        .HasColumnType("float");

                    b.Property<double>("totalCommande")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("fournisseurId");

                    b.ToTable("commandes");
                });

            modelBuilder.Entity("ATD_API.Entities.CoursDeChange", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateEnCours")
                        .HasColumnType("datetime2");

                    b.Property<string>("monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("tauxAchat")
                        .HasColumnType("float");

                    b.Property<double>("tauxVente")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("coursDeChanges");
                });

            modelBuilder.Entity("ATD_API.Entities.Depense", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("beneficiaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<double>("montant")
                        .HasColumnType("float");

                    b.Property<string>("motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("depenses");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailAchat", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("achatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("prixTotal")
                        .HasColumnType("float");

                    b.Property<double>("prixUnit")
                        .HasColumnType("float");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("achatId");

                    b.HasIndex("articleId");

                    b.ToTable("detailAchats");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailCommande", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("commandeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("prixTotal")
                        .HasColumnType("float");

                    b.Property<double>("prixUnit")
                        .HasColumnType("float");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.Property<double>("quantiteLivree")
                        .HasColumnType("float");

                    b.Property<double>("resteQuantite")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("commandeId");

                    b.ToTable("detailCommandes");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailFacture", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("factureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("prixTotal")
                        .HasColumnType("float");

                    b.Property<double>("prixUnit")
                        .HasColumnType("float");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("factureId");

                    b.ToTable("detailFactures");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailIventaire", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ecart")
                        .HasColumnType("float");

                    b.Property<string>("emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("inventaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("quantiteLogique")
                        .HasColumnType("float");

                    b.Property<double>("quantitePhysique")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("detailIventaires");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailLivraison", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("livraisonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("prixTotal")
                        .HasColumnType("float");

                    b.Property<double>("prixUnit")
                        .HasColumnType("float");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("livraisonId");

                    b.ToTable("detailLivraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Emballage", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("emballages");
                });

            modelBuilder.Entity("ATD_API.Entities.EmballageByArticle", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("emballageDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emballageGros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("emballageByArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateFacture")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montantLettre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("montantPayer")
                        .HasColumnType("float");

                    b.Property<string>("numeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paiement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("remise")
                        .HasColumnType("float");

                    b.Property<double>("resteApayer")
                        .HasColumnType("float");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("taux")
                        .HasColumnType("float");

                    b.Property<double>("totalHt")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("locationId");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("ATD_API.Entities.Famille", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("familles");
                });

            modelBuilder.Entity("ATD_API.Entities.Fournisseur", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("fournisseurs");
                });

            modelBuilder.Entity("ATD_API.Entities.HistoriquePrixVente", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ancienPrixDeVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("ancienPrixDeVenteGros")
                        .HasColumnType("float");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateModification")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("nouveauPrixDeVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("nouveauPrixDeVenteGros")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("historiquePrixVentes");
                });

            modelBuilder.Entity("ATD_API.Entities.Inventaire", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date2")
                        .HasColumnType("datetime2");

                    b.Property<double>("ecart")
                        .HasColumnType("float");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("quantiteLogique")
                        .HasColumnType("float");

                    b.Property<double>("quantitePhysique")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("locationId");

                    b.ToTable("inventaires");
                });

            modelBuilder.Entity("ATD_API.Entities.InvetaireComptable", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date1")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("montantEnt")
                        .HasColumnType("float");

                    b.Property<double>("montantFinal")
                        .HasColumnType("float");

                    b.Property<double>("montantInit")
                        .HasColumnType("float");

                    b.Property<double>("montantSort")
                        .HasColumnType("float");

                    b.Property<double>("qteEnt")
                        .HasColumnType("float");

                    b.Property<double>("qteSort")
                        .HasColumnType("float");

                    b.Property<double>("stockFinal")
                        .HasColumnType("float");

                    b.Property<double>("stockInit")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("inventaireComptables");
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("fournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("numeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalLivraison")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("fournisseurId");

                    b.HasIndex("locationId");

                    b.ToTable("livraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateCloture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("flag")
                        .HasColumnType("bit");

                    b.Property<string>("numeroAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("societeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("societeId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("ATD_API.Entities.Login", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("state")
                        .HasColumnType("bit");

                    b.Property<string>("utilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("logins");
                });

            modelBuilder.Entity("ATD_API.Entities.Monnaie", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estLocal")
                        .HasColumnType("bit");

                    b.Property<string>("libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("monnaies");
                });

            modelBuilder.Entity("ATD_API.Entities.Mouvement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emballage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("mouvements");
                });

            modelBuilder.Entity("ATD_API.Entities.Paiement", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("datePaiement")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("factureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("montantPayer")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("factureId");

                    b.ToTable("paiements");
                });

            modelBuilder.Entity("ATD_API.Entities.ParametreSociete", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("attachement")
                        .HasColumnType("int");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("denomination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idNat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rccm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("tva")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("parametreSocietes");
                });

            modelBuilder.Entity("ATD_API.Entities.Portefeuille", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("clientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<double>("montant")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("portefeuilles");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixAchatArticle", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dateAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("monnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("prixAchatDetail")
                        .HasColumnType("float");

                    b.Property<double>("prixAchatGros")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("monnaieId");

                    b.ToTable("prixAchatArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixArticleLocation", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("prixVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("prixVenteGros")
                        .HasColumnType("float");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("locationId");

                    b.ToTable("prixArticleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ATD_API.Entities.Signaletique", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("utilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("signaletiques");
                });

            modelBuilder.Entity("ATD_API.Entities.Stock", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("quantite")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("articleId");

                    b.HasIndex("locationId");

                    b.ToTable("article_stocks");
                });

            modelBuilder.Entity("ATD_API.Entities.Utilisateur", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("locationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postnom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("roleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("utilisateurs");
                });

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("fournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.HasOne("ATD_API.Entities.Famille", "Famille")
                        .WithMany()
                        .HasForeignKey("familleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("ATD_API.Entities.ArticleLocation", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany()
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Emballage", "Emballage")
                        .WithMany("ArticleLocations")
                        .HasForeignKey("emballageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("ArticleLocations")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Emballage");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany("Commandes")
                        .HasForeignKey("fournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailAchat", b =>
                {
                    b.HasOne("ATD_API.Entities.Achat", null)
                        .WithMany("detailAchats")
                        .HasForeignKey("achatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Article", null)
                        .WithMany("detailAchats")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailCommande", b =>
                {
                    b.HasOne("ATD_API.Entities.Commande", null)
                        .WithMany("detailCommandes")
                        .HasForeignKey("commandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailFacture", b =>
                {
                    b.HasOne("ATD_API.Entities.Facture", null)
                        .WithMany("detailFactures")
                        .HasForeignKey("factureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailLivraison", b =>
                {
                    b.HasOne("ATD_API.Entities.Livraison", null)
                        .WithMany("detailLivraisons")
                        .HasForeignKey("livraisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("Factures")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Inventaire", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", null)
                        .WithMany("Inventaires")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", null)
                        .WithMany("Inventaires")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany("Livraisons")
                        .HasForeignKey("fournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("Livraisons")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.HasOne("ATD_API.Entities.ParametreSociete", "Societe")
                        .WithMany("Locations")
                        .HasForeignKey("societeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Societe");
                });

            modelBuilder.Entity("ATD_API.Entities.Paiement", b =>
                {
                    b.HasOne("ATD_API.Entities.Facture", "Facture")
                        .WithMany("Paiements")
                        .HasForeignKey("factureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixAchatArticle", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany("PrixAchatArticles")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Monnaie", "Monnaie")
                        .WithMany("PrixAchatArticles")
                        .HasForeignKey("monnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixArticleLocation", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany("PrixArticleLocations")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("PrixArticleLocations")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Stock", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", null)
                        .WithMany("Stocks")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", null)
                        .WithMany("Stocks")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.Navigation("detailAchats");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.Navigation("Inventaires");

                    b.Navigation("PrixAchatArticles");

                    b.Navigation("PrixArticleLocations");

                    b.Navigation("Stocks");

                    b.Navigation("detailAchats");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.Navigation("detailCommandes");
                });

            modelBuilder.Entity("ATD_API.Entities.Emballage", b =>
                {
                    b.Navigation("ArticleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.Navigation("Paiements");

                    b.Navigation("detailFactures");
                });

            modelBuilder.Entity("ATD_API.Entities.Fournisseur", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Livraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.Navigation("detailLivraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.Navigation("ArticleLocations");

                    b.Navigation("Factures");

                    b.Navigation("Inventaires");

                    b.Navigation("Livraisons");

                    b.Navigation("PrixArticleLocations");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ATD_API.Entities.Monnaie", b =>
                {
                    b.Navigation("PrixAchatArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.ParametreSociete", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
