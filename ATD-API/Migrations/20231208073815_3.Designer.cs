// <auto-generated />
using System;
using ATD_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATD_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231208073815_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MonnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<string>("NumeroAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TauxAchat")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MonnaieId");

                    b.ToTable("achats");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmballageDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmballageGrosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FamilleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantiteDetail")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilleId");

                    b.ToTable("articles");
                });

            modelBuilder.Entity("ATD_API.Entities.ArticleLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmballageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QteStock")
                        .HasColumnType("float");

                    b.Property<double>("Seuil")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("EmballageId");

                    b.HasIndex("LocationId");

                    b.ToTable("articleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Concerne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<string>("Echeance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MonnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TauxDeChange")
                        .HasColumnType("float");

                    b.Property<double>("TotalCommande")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("MonnaieId");

                    b.ToTable("commandes");
                });

            modelBuilder.Entity("ATD_API.Entities.CoursDeChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEnCours")
                        .HasColumnType("datetime2");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TauxAchat")
                        .HasColumnType("float");

                    b.Property<double>("TauxVente")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("coursDeChanges");
                });

            modelBuilder.Entity("ATD_API.Entities.Depense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Beneficiaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<float>("Montant")
                        .HasColumnType("real");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("depenses");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailAchat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("float");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<double>("Quantite")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AchatId");

                    b.HasIndex("ArticleId");

                    b.ToTable("detailAchats");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailCommande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommandeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("float");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<double>("Quantite")
                        .HasColumnType("float");

                    b.Property<double>("QuantiteLivree")
                        .HasColumnType("float");

                    b.Property<double>("ResteQuantite")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.ToTable("detailCommandes");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailFacture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("float");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<double>("Quantite")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.ToTable("detailFactures");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailIventaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Ecart")
                        .HasColumnType("float");

                    b.Property<string>("Emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InventaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantiteLogique")
                        .HasColumnType("float");

                    b.Property<double>("QuantitePhysique")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("detailIventaires");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailLivraison", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emballage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LivraisonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("float");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<double>("Quantite")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LivraisonId");

                    b.ToTable("detailLivraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Emballage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("emballages");
                });

            modelBuilder.Entity("ATD_API.Entities.EmballageByArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmballageDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmballageGros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("emballageByArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFacture")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MontantLettre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MontantPayer")
                        .HasColumnType("float");

                    b.Property<string>("NumeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paiement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Remise")
                        .HasColumnType("float");

                    b.Property<double>("ResteApayer")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Taux")
                        .HasColumnType("float");

                    b.Property<double>("TotalHt")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("ATD_API.Entities.Famille", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("familles");
                });

            modelBuilder.Entity("ATD_API.Entities.Fournisseur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("fournisseurs");
                });

            modelBuilder.Entity("ATD_API.Entities.HistoriquePrixVente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AncienPrixDeVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("AncienPrixDeVenteGros")
                        .HasColumnType("float");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateModification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NouveauPrixDeVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("NouveauPrixDeVenteGros")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("historiquePrixVentes");
                });

            modelBuilder.Entity("ATD_API.Entities.Inventaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateInventaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ecart")
                        .HasColumnType("float");

                    b.Property<string>("EmballageDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmballageGros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixAchat")
                        .HasColumnType("float");

                    b.Property<double>("PrixVente")
                        .HasColumnType("float");

                    b.Property<double>("QuantiteLogiqueGros")
                        .HasColumnType("float");

                    b.Property<double>("QuantitePhysiqueDetail")
                        .HasColumnType("float");

                    b.Property<double>("QuantitePhysiqueGros")
                        .HasColumnType("float");

                    b.Property<double>("QuatiteLogiqueDetail")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("LocationId");

                    b.ToTable("inventaires");
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MonnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NumeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MonnaieId");

                    b.ToTable("livraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCloture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCommande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SocieteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SocieteId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("ATD_API.Entities.Monnaie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estLocal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("monnaies");
                });

            modelBuilder.Entity("ATD_API.Entities.Mouvement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emballage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantite")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("mouvements");
                });

            modelBuilder.Entity("ATD_API.Entities.Paiement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MontantPayer")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.ToTable("paiements");
                });

            modelBuilder.Entity("ATD_API.Entities.ParametreSociete", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Attachement")
                        .HasColumnType("int");

                    b.Property<string>("Denomination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rccm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tva")
                        .HasColumnType("float");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("parametreSocietes");
                });

            modelBuilder.Entity("ATD_API.Entities.Portefeuille", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("clientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("monnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("montant")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("monnaieId");

                    b.ToTable("portefeuilles");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixAchatArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MonnaieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PrixAchatDetail")
                        .HasColumnType("float");

                    b.Property<double>("PrixAchatGros")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MonnaieId");

                    b.ToTable("prixAchatArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixArticleLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Monnaie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixVenteDetail")
                        .HasColumnType("float");

                    b.Property<double>("PrixVenteGros")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("LocationId");

                    b.ToTable("prixArticleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Signaletique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaisonSociale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("signaletiques");
                });

            modelBuilder.Entity("ATD_API.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantite")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("LocationId");

                    b.ToTable("article_stocks");
                });

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Monnaie", "Monnaie")
                        .WithMany()
                        .HasForeignKey("MonnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Location");

                    b.Navigation("Monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.HasOne("ATD_API.Entities.Famille", "Famille")
                        .WithMany()
                        .HasForeignKey("FamilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("ATD_API.Entities.ArticleLocation", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Emballage", "Emballage")
                        .WithMany("ArticleLocations")
                        .HasForeignKey("EmballageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("ArticleLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Emballage");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany("Commandes")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Monnaie", "Monnaie")
                        .WithMany("Commandes")
                        .HasForeignKey("MonnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.DetailAchat", b =>
                {
                    b.HasOne("ATD_API.Entities.Achat", null)
                        .WithMany("DetailAchats")
                        .HasForeignKey("AchatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Article", null)
                        .WithMany("DetailAchats")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailCommande", b =>
                {
                    b.HasOne("ATD_API.Entities.Commande", null)
                        .WithMany("DetailCommandes")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailFacture", b =>
                {
                    b.HasOne("ATD_API.Entities.Facture", null)
                        .WithMany("DetailFactures")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.DetailLivraison", b =>
                {
                    b.HasOne("ATD_API.Entities.Livraison", null)
                        .WithMany("DetailLivraisons")
                        .HasForeignKey("LivraisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("Factures")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Inventaire", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany("Inventaires")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("Inventaires")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.HasOne("ATD_API.Entities.Fournisseur", "Fournisseur")
                        .WithMany("Livraisons")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("Livraisons")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Monnaie", "Monnaie")
                        .WithMany("Livraisons")
                        .HasForeignKey("MonnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Location");

                    b.Navigation("Monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.HasOne("ATD_API.Entities.ParametreSociete", "Societe")
                        .WithMany("Locations")
                        .HasForeignKey("SocieteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Societe");
                });

            modelBuilder.Entity("ATD_API.Entities.Paiement", b =>
                {
                    b.HasOne("ATD_API.Entities.Facture", "Facture")
                        .WithMany("Paiements")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("ATD_API.Entities.Portefeuille", b =>
                {
                    b.HasOne("ATD_API.Entities.Monnaie", "monnaie")
                        .WithMany("Portefeuilles")
                        .HasForeignKey("monnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixAchatArticle", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany("PrixAchatArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Monnaie", "Monnaie")
                        .WithMany("PrixAchatArticles")
                        .HasForeignKey("MonnaieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Monnaie");
                });

            modelBuilder.Entity("ATD_API.Entities.PrixArticleLocation", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", "Article")
                        .WithMany("PrixArticleLocations")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", "Location")
                        .WithMany("PrixArticleLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ATD_API.Entities.Stock", b =>
                {
                    b.HasOne("ATD_API.Entities.Article", null)
                        .WithMany("Stocks")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATD_API.Entities.Location", null)
                        .WithMany("Stocks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ATD_API.Entities.Achat", b =>
                {
                    b.Navigation("DetailAchats");
                });

            modelBuilder.Entity("ATD_API.Entities.Article", b =>
                {
                    b.Navigation("DetailAchats");

                    b.Navigation("Inventaires");

                    b.Navigation("PrixAchatArticles");

                    b.Navigation("PrixArticleLocations");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ATD_API.Entities.Commande", b =>
                {
                    b.Navigation("DetailCommandes");
                });

            modelBuilder.Entity("ATD_API.Entities.Emballage", b =>
                {
                    b.Navigation("ArticleLocations");
                });

            modelBuilder.Entity("ATD_API.Entities.Facture", b =>
                {
                    b.Navigation("DetailFactures");

                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("ATD_API.Entities.Fournisseur", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Livraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Livraison", b =>
                {
                    b.Navigation("DetailLivraisons");
                });

            modelBuilder.Entity("ATD_API.Entities.Location", b =>
                {
                    b.Navigation("ArticleLocations");

                    b.Navigation("Factures");

                    b.Navigation("Inventaires");

                    b.Navigation("Livraisons");

                    b.Navigation("PrixArticleLocations");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ATD_API.Entities.Monnaie", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Livraisons");

                    b.Navigation("Portefeuilles");

                    b.Navigation("PrixAchatArticles");
                });

            modelBuilder.Entity("ATD_API.Entities.ParametreSociete", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
